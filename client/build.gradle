plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 29
    buildToolsVersion '30.0.3'
    defaultConfig {
        applicationId "com.osiris"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    buildTypes {
        debug {
            debuggable true
        }
    }

    //apktool has some java awt deps but not needed for our uses.
    lintOptions {
        abortOnError false
    }

    task decodeOsiris(type: JavaExec) {
        classpath = files('./lib/apktool_2.5.0.jar')
        main = 'brut.apktool.Main'
        args 'd','-f','./build/outputs/apk/debug/client-debug.apk'
    }

    task decodeOSRS(type: JavaExec) {
        classpath = files('./lib/apktool_2.5.0.jar')
        main = 'brut.apktool.Main'
        args 'd','-f','./lib/osrs.apk'
    }

    task patchOSiris(type: Copy) {
        from file("./client-debug/smali_classes2/com/osiris/")
        into file("./osrs/smali/com/osiris/")
    }

    task patchRSAPI(type: Copy) {
        from file("./client-debug/smali_classes5/net/")
        into file("./osrs/smali/net/")
    }

    task patchRLAPI(type: Copy) {
        from file("./client-debug/smali_classes6/net/")
        into file("./osrs/smali/net/")
        //eachFile { if (it.relativePath.getFile(destinationDir).exists()) it.exclude() }
    }

    task patchHttpApi(type: Copy) {
        from file("./client-debug/smali_classes4/net/")
        into file("./osrs/smali/net/")
        //eachFile { if (it.relativePath.getFile(destinationDir).exists()) it.exclude() }
    }

    task patchInjectionAnnotations(type: Copy) {
        from file("./client-debug/smali_classes7/net/")
        into file("./osrs/smali/net/")
        //eachFile { if (it.relativePath.getFile(destinationDir).exists()) it.exclude() }
    }

    task patchSLF4J(type: Copy) {
        from file("./client-debug/smali_classes3/org/slf4j/")
        into file("./osrs/smali/org/slf4j")
    }

    task patchGoogle1(type: Copy) {
        from file("./osrs/smali/com/google/android/")
        into file("./client-debug/smali/com/google/android/")
        eachFile { if (it.relativePath.getFile(destinationDir).exists()) it.exclude() }
    }

    task patchGoogle2(type: Copy) {
        from file("./osrs/smali/com/google/auto/")
        into file("./client-debug/smali/com/google/auto/")
        eachFile { if (it.relativePath.getFile(destinationDir).exists()) it.exclude() }
    }

    task patchGoogle3(type: Copy) {
        from file("./osrs/smali/com/google/firebase/")
        into file("./client-debug/smali/com/google/firebase/")
        eachFile { if (it.relativePath.getFile(destinationDir).exists()) it.exclude() }
    }

    task patchGoogle4(type: Copy) {
        from file("./osrs/smali/com/google/gson/")
        into file("./client-debug/smali/com/google/gson/")
        eachFile { if (it.relativePath.getFile(destinationDir).exists()) it.exclude() }
    }

    task patchGoogle5(type: Delete) {
        delete "./osrs/smali/com/google/"
        followSymlinks = false
    }

    task patchGoogle6(type: Copy) {
        from file("./client-debug/smali/com/google/")
        into file("./osrs/smali/com/google/")
    }

    task patchOkhttp(type: Copy) {
        from file("./client-debug/smali_classes3/okhttp3/")
        into file("./osrs/smali/okhttp3/")
    }

    task patchOkio(type: Copy) {
        from file("./client-debug/smali_classes3/okio/")
        into file("./osrs/smali/okio/")
    }

    task replaceManifest(type: Copy) {
        from file("./patches/")
        into file("./osrs/")
    }

    task multidexPatch1(type: Copy) {
        from file("./osrs/smali/android/")
        into file("./osrs/smali_classes2/android/")
        doLast {
            delete file("./osrs/smali/android/")
        }
    }

    task multidexPatch2(type: Copy) {
        from file("./osrs/smali/androidx/")
        into file("./osrs/smali_classes2/androidx/")
        doLast {
            delete file("./osrs/smali/androidx/")
        }
    }

    task assembleOsiris(type: JavaExec) {
        classpath = files('./lib/apktool_2.5.0.jar')
        main = 'brut.apktool.Main'
        args 'b','-f','./osrs/'
    }

    task deleteOldDebug(type: Delete) {
        delete file("./build/outputs/apk/debug/client-debug.apk")
    }

    task testSignAPK(type: JavaExec) {
        classpath = files('./lib/signapk-1.0.jar')
        main = 'orig.SignApk'
        args './lib/testkey.x509.pem','./lib/testkey.pk8','./osrs/dist/osrs.apk','./build/outputs/apk/debug/client-debug.apk'
    }

    afterEvaluate {
        decodeOSRS.dependsOn packageDebug
        decodeOsiris.dependsOn decodeOSRS
        patchOSiris.dependsOn decodeOsiris
        patchRSAPI.dependsOn patchOSiris
        patchRLAPI.dependsOn patchRSAPI
        patchInjectionAnnotations.dependsOn patchRLAPI
        patchSLF4J.dependsOn patchInjectionAnnotations
        patchHttpApi.dependsOn patchSLF4J
        patchOkhttp.dependsOn patchHttpApi
        patchOkio.dependsOn patchOkhttp
        patchGoogle1.dependsOn patchOkio
        patchGoogle2.dependsOn patchGoogle1
        patchGoogle3.dependsOn patchGoogle2
        patchGoogle4.dependsOn patchGoogle3
        patchGoogle5.dependsOn patchGoogle4
        patchGoogle6.dependsOn patchGoogle5
        replaceManifest.dependsOn patchGoogle6
        multidexPatch1.dependsOn replaceManifest
        multidexPatch2.dependsOn multidexPatch1
        assembleOsiris.dependsOn multidexPatch2
        deleteOldDebug.dependsOn assembleOsiris
        testSignAPK.dependsOn deleteOldDebug
        assembleDebug.dependsOn testSignAPK

        installDebug.dependsOn assembleDebug
        uninstallDebug.dependsOn assembleDebug
    }
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    compileOnly 'org.projectlombok:lombok:1.18.16'

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'org.jetbrains:annotations:20.1.0'
    implementation 'com.jakewharton.rxrelay3:rxrelay:3.0.0'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation 'com.google.guava:guava:29.0-jre'
    implementation project(":http-api")
    implementation project(":runelite-api")
    implementation project(":runescape-api")
    testImplementation 'junit:junit:4.13.1'
    implementation 'com.squareup.okhttp3:okhttp:3.7.0'
}
